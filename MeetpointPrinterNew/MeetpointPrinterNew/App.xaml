<Application x:Class="MeetpointPrinterNew.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MeetpointPrinterNew"
             xmlns:custom="clr-namespace:MeetpointPrinterNew.CustomControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- General styles -->
        
        <!-- Label styles -->
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Padding" Value="0,0,0,5" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>
        
        <!-- Textbox styles -->
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="4" BorderThickness="1" BorderBrush="#CBCBCB" >
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Passwordbox styles -->
        <Style TargetType="PasswordBox">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border CornerRadius="4" BorderThickness="1" BorderBrush="#CBCBCB" Padding="8,0,8,0">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary Button style -->
        <Style x:Key="ButtonPrimary" TargetType="Button">
            <Setter Property="Background" Value="#50A2FF"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1d87ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Page with header Template -->
        <Style x:Key="HeaderFooterPageStyle" TargetType="Page">
            <Setter Property="Background" Value="#50A2FF"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                             <!-- Header row --> 
                            <Grid Grid.Row="0">

                                <!-- Rectangle hack to put shadow on header (in a way that it won't affect text rendering) -->
                                <Rectangle Fill="#434752" RadiusX="4" RadiusY="4" HorizontalAlignment="Stretch" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect ShadowDepth="2" Direction="315" Color="#ccc"/>
                                    </Rectangle.Effect>
                                </Rectangle>

                                <!-- Header -->
                                <Border Background="#434752">
                                    <DockPanel LastChildFill="False">
                                        <Image DockPanel.Dock="Left" Margin="20,0,0,0" Source="/Images/logo_mp_white.png" Width="170"></Image>
                                        <Button x:Name="btnEvents" 
                                                Margin="50,0,0,0" 
                                                DockPanel.Dock="Left"
                                                Foreground="White" 
                                                Background="Transparent" 
                                                BorderThickness="0" 
                                                Content="EVENTS" 
                                                FontWeight="SemiBold"
                                                FontSize="13"
                                                Cursor="Hand"
                                                Click="btnEvents_Click">
                                        </Button>

                                        <Button x:Name="btnLogout" DockPanel.Dock="Right" Content="LOG OUT" FontSize="12" Margin="20,0,20,0" Height="30" Width="80" Padding="10, 40, 40, 10" Style="{StaticResource ButtonPrimary}" Click="btnLogout_Click"></Button>
                                        <Label x:Name="LblCurrentUser" DockPanel.Dock="Right" VerticalAlignment="Center" FontSize="14" FontWeight="Regular" Foreground="White">
                                            <Label.Content>
                                                <Binding Path="CurrentUser" Source="{x:Static Application.Current}"/>
                                            </Label.Content>
                                        </Label>
                                    </DockPanel>
                                </Border>
                                
                            </Grid>
                            
                             <!-- Content row --> 
                            <ContentPresenter Grid.Row="1"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Page with header and subheader Template -->
        <Style x:Key="HeaderFooterSettingsPageStyle" TargetType="Page">
            <Setter Property="Background" Value="#50A2FF"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="85"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!-- Header row -->
                            <Grid Grid.Row="0">

                                <!-- Rectangle hack to put shadow on header (in a way that it won't affect text rendering) -->
                                <Rectangle Fill="#434752" RadiusX="4" RadiusY="4" HorizontalAlignment="Stretch" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect ShadowDepth="2" Direction="315" Color="#ccc"/>
                                    </Rectangle.Effect>
                                </Rectangle>

                                <!-- Header -->
                                <Border Background="#434752">
                                    <DockPanel LastChildFill="False">
                                        <Image DockPanel.Dock="Left" Margin="20,0,0,0" Source="/Images/logo_mp_white.png" Width="170"></Image>
                                        <Button x:Name="btnEvents" 
                                            Margin="50,0,0,0" 
                                            DockPanel.Dock="Left"
                                            Foreground="White" 
                                            Background="Transparent" 
                                            BorderThickness="0" 
                                            Content="EVENTS" 
                                            FontWeight="SemiBold"
                                            FontSize="13"
                                            Cursor="Hand"
                                            Click="btnEvents_Click">
                                        </Button>

                                        <Button x:Name="btnLogout" DockPanel.Dock="Right" Content="LOG OUT" FontSize="12" Margin="20,0,20,0" Height="30" Width="80" Padding="10, 40, 40, 10" Style="{StaticResource ButtonPrimary}" Click="btnLogout_Click"></Button>
                                        <Label x:Name="LblCurrentUser" DockPanel.Dock="Right" VerticalAlignment="Center" FontSize="14" FontWeight="Regular" Foreground="White">
                                            <Label.Content>
                                                <Binding Path="CurrentUser" Source="{x:Static Application.Current}"/>
                                            </Label.Content>
                                        </Label>
                                    </DockPanel>
                                </Border>

                            </Grid>

                            <!-- Subheader row -->
                            <Grid Grid.Row="1">
                                <Border Grid.Row="0" Background="#fff" >
                                    <DockPanel VerticalAlignment="Center">
                                        <Grid DockPanel.Dock="Left">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <DockPanel Grid.Row="0">
                                                <Image x:Name="imgEventLogo" Width="30" Source="/Images/icon_event_primary.png" DockPanel.Dock="Left" Margin="50,0,10,0"></Image>
                                                <Label x:Name="lblEventName" Foreground="#FF2489FF" FontSize="18" DockPanel.Dock="Left" Margin="0,5,0,0" >
                                                    <Label.Content>
                                                        <Binding Path="CurrentEvent" Source="{x:Static Application.Current}"/>
                                                    </Label.Content>
                                                </Label>
                                            </DockPanel>

                                            <Label x:Name="lblEventDateLocation" FontSize="14" FontWeight="Regular" Grid.Row="1" Margin="90,0,0,0">
                                                <Label.Content>
                                                    <Binding Path="CurrentEventLocation" Source="{x:Static Application.Current}"/>
                                                </Label.Content>
                                            </Label>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                            </Grid>

                            <!-- Content row -->
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="100"/>
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row="0" x:Name="gdrContent" Margin="50, 35, 50, 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="30*"></ColumnDefinition>
                                        <ColumnDefinition Width="60*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <!-- Rectangle hack to put shadow on panel (in a way that it won't affect text rendering) -->
                                    <Rectangle Stretch="Fill" Fill="#fff" RadiusX="4" RadiusY="4" Grid.Column="1">
                                        <Rectangle.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="315" Color="#ccc"/>
                                        </Rectangle.Effect>
                                    </Rectangle>

                                    <Border Grid.Column="1" Background="#fff" CornerRadius="4">
                                        <ContentPresenter Grid.Column="1" />
                                    </Border>
                                </Grid>

                                <Grid Grid.Row="1" Margin="0,0,50,0">
                                    <DockPanel LastChildFill="False">
                                        <Button x:Name="btnNext" Width="100" Margin="10,0,0,0" Content="NEXT" Style="{StaticResource ButtonPrimary}" DockPanel.Dock="Right" Click="btnNext_Click"></Button>
                                        <Button x:Name="btnCancel" Width="100" Content="CANCEL" Style="{StaticResource ButtonPrimary}" Background="#CECFD1" DockPanel.Dock="Right" Click="btnCancel_Click"></Button>
                                    </DockPanel>
                                </Grid>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="EventBorderStyle"  TargetType="custom:EventControl">
            <Setter Property="BorderThickness"  Value="2" />
            <Setter Property="Background"  Value="Transparent" />
            <Setter Property="Margin" Value="10, 0, 10, 25" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF1FE6A5" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#FF1FE6A5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="LogBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness"  Value="2" />
            <Setter Property="Background"  Value="Transparent" />
            <Setter Property="CornerRadius"  Value="0" />
            <Setter Property="Margin"  Value="10" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF50A2FF" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="ChecBoxPrinterStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="300" Padding="15,12" Margin="0,0,25,25">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageCheckBox" Source="/Images/icon_printer_primary.png" Width="30" Height="30" Margin="0,0,10,0" />
                                <ContentPresenter VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="Background" Value="#EEF5FE" />
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="ChecBoxAccountStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="300" Padding="15,12" Margin="0,0,25,25">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageCheckBox" Source="/Images/icon_user_primary.png" Width="25" Height="25" Margin="0,0,10,0"/>
                                <ContentPresenter VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="Background" Value="#EEF5FE" />
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
        
        <Style x:Key="CheckBoxTemplateSizeStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Padding="10,5" Margin="0,0,15,15">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleHL" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" BorderThickness="2" CornerRadius="4" Width="115" Height="55" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="/Images/qr.jpg" HorizontalAlignment="Left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleHR" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15"  BorderThickness="2" CornerRadius="4" Width="115" Height="55">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/Images/qr.jpg" HorizontalAlignment="Right"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleQRT" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Source="/Images/qr.jpg"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
     
        <Style x:Key="CheckBoxTemplateLayoutStyleQRB" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="Right"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
     
        <Style x:Key="CheckBoxTemplateLayoutStyleQLT" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="Left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
    
        <Style x:Key="CheckBoxTemplateLayoutStyleQLB" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="ChecBoxDataStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <DockPanel>
                            <Border x:Name="bdrOutside" DockPanel.Dock="Left" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="18" Height="18" Margin="0,0,10,0"></Border>
                            <ContentPresenter VerticalAlignment="Center" DockPanel.Dock="Left" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="Background" Value="#EEF5FE" />
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Margin" Value="0,0,0,5"></Setter>
        </Style>

        <Style x:Key="TextBlockTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>
     
        <Style x:Key="TextBlockSubtitle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize"  Value="16"/>
            <Setter Property="FontWeight"  Value="SemiBold"/>
        </Style>

        <Style x:Key="BorderSettings" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Gray" Direction="3"  ShadowDepth="1" BlurRadius="6" />
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>

