<Application x:Class="MeetpointPrinterNew.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MeetpointPrinterNew"
             xmlns:custom="clr-namespace:MeetpointPrinterNew.CustomControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!-- General label styles -->
        <Style TargetType="Label">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Padding" Value="0,0,0,5" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <!-- General textblock styles -->
        <Style TargetType="TextBlock">
            <!--<Setter Property="FontSize" Value="14" />-->
        </Style>

        <!-- Title (h1) style -->
        <Style x:Key="TextBlockTitle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Subtitle (h2) style -->
        <Style x:Key="TextBlockSubtitle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="FontSize"  Value="16"/>
            <Setter Property="FontWeight"  Value="SemiBold"/>
        </Style>

        <!-- Helper text style -->
        <Style x:Key="TextBlockHelperText" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize"  Value="12"/>
            <Setter Property="FontWeight"  Value="Regular"/>
            <Setter Property="Foreground"  Value="#8A8A8A"/>
        </Style>

        <!-- TextBlockImage panel style -->
        <Style x:Key="TextBlockImagePanel" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="CornerRadius" Value="4"/>
            
        </Style>

        <!-- TextBlockImage control  style -->
        <Style x:Key="TextBlockImageStyle" TargetType="{x:Type custom:TextBlockImageControl}">
            <Setter Property="Margin" Value="0,0,25,25"/> 
            <Setter Property="BorderBrush" Value="#FFCBCBCB"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF1FE6A5" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderBrush" Value="#FF1FE6A5" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- White panel style -->
        <Style x:Key="Panel" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="25"/>
            <!--<Setter Property="Margin" Value="0,0,0,25"/>-->
            <Setter Property="CornerRadius" Value="4"/>
        </Style>

        <!-- White panel style -->
        <Style x:Key="Panel2" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Padding" Value="25"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="BorderBrush" Value="#FF1FE6A5"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="BorderBrush" Value="#fff"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#FF1FE6A5"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Textbox styles -->
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="Padding" Value="8,0,8,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="4" BorderThickness="1" BorderBrush="#CBCBCB" >
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Passwordbox styles -->
        <Style TargetType="PasswordBox">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border CornerRadius="4" BorderThickness="1" BorderBrush="#CBCBCB" Padding="8,0,8,0">
                            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Primary button style -->
        <Style x:Key="ButtonPrimary" TargetType="Button">
            <Setter Property="Background" Value="#50A2FF"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="4" Padding="15,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1d87ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Small primary button style -->
        <Style x:Key="ButtonPrimaryS" TargetType="Button" BasedOn="{StaticResource ButtonPrimary}">
            <Setter Property="Background" Value="#50A2FF"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="4" Padding="10,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1d87ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Default button style -->
        <Style x:Key="ButtonDefault" TargetType="Button">
            <Setter Property="Background" Value="#AFAFAF"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="4" Padding="15,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#919191"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Round primary button style -->
        <Style x:Key="ButtonPrimaryCircle" TargetType="Button">
            <Setter Property="Background" Value="#50A2FF"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="0" CornerRadius="50">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1d87ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Toggle button style-->
        <Style x:Key="ToggleButton" TargetType="CheckBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#333"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="90"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#fff"/>
                    <Setter Property="BorderBrush" Value="#1FE6A5"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Background" Value="#fff"/>
                    <Setter Property="BorderBrush" Value="#1FE6A5"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- SetupStep -->
        <Style x:Key="SetupStep" TargetType="CheckBox">
            <Setter Property="Width" Value="72"/>
            <Setter Property="Height" Value="72"/>
            <Setter Property="Background" Value="#D3D4D6"/>
            <Setter Property="BorderBrush" Value="#D3D4D6"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="70">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="BorderBrush" Value="#C6DBF3"/>
                    <Setter Property="Background" Value="#C6DBF3"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#1FE6A5"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Header link style-->
        <Style x:Key="HeaderLink" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#fff"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#ccc"/>
                </Trigger>
                
            </Style.Triggers>
        </Style>

        <!-- Page with header Template -->
        <Style x:Key="HeaderFooterPageStyle" TargetType="Page">
            <Setter Property="Background" Value="#50A2FF"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            
                             <!-- Header row --> 
                            <Grid Grid.Row="0">

                                <!-- Rectangle hack to put shadow on header (in a way that it won't affect text rendering) -->
                                <Rectangle Fill="#434752" RadiusX="4" RadiusY="4" HorizontalAlignment="Stretch" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect ShadowDepth="2" Direction="315" Color="#ccc"/>
                                    </Rectangle.Effect>
                                </Rectangle>

                                <!-- Header -->
                                <Border Background="#434752">
                                    <DockPanel LastChildFill="False">
                                        <Image DockPanel.Dock="Left" Margin="20,0,0,0" Source="/Images/logo_mp_white.png" Width="170"></Image>
                                        <!--<Button x:Name="btnEvents" Margin="50,0,0,0" DockPanel.Dock="Left" Content="EVENTS" Click="btnEvents_Click" Style="{StaticResource HeaderLink}"></Button>-->
                                        <Button x:Name="btnLogout" DockPanel.Dock="Right" Content="LOG OUT" Style="{StaticResource ButtonPrimaryS}" Margin="20,0,20,0" Click="btnLogout_Click"></Button>
                                        <Label x:Name="LblCurrentUser" DockPanel.Dock="Right" VerticalAlignment="Center" FontSize="14" FontWeight="Regular" Foreground="White">
                                            <Label.Content>
                                                <Binding Path="CurrentUser" Source="{x:Static Application.Current}"/>
                                            </Label.Content>
                                        </Label>
                                    </DockPanel>
                                </Border>
                                
                            </Grid>
                            
                             <!-- Content row --> 
                            <ContentPresenter Grid.Row="1"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Page with header and subheader Template -->
        <Style x:Key="HeaderFooterSettingsPageStyle" TargetType="Page">
            <Setter Property="Background" Value="#50A2FF"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="85"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <!-- Header row -->
                            <Grid Grid.Row="0">

                                <!-- Rectangle hack to put shadow on header (in a way that it won't affect text rendering) -->
                                <Rectangle Fill="#434752" RadiusX="4" RadiusY="4" HorizontalAlignment="Stretch" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect ShadowDepth="2" Direction="315" Color="#ccc"/>
                                    </Rectangle.Effect>
                                </Rectangle>

                                <!-- Header -->
                                <Border Background="#434752">
                                    <DockPanel LastChildFill="False">
                                        <Image DockPanel.Dock="Left" Margin="20,0,0,0" Source="/Images/logo_mp_white.png" Width="170"></Image>
                                        <Button x:Name="btnEvents" Margin="50,0,0,0" DockPanel.Dock="Left" Content="EVENTS" Click="btnEvents_Click" Style="{StaticResource HeaderLink}"></Button>

                                        <Button x:Name="btnLogout" DockPanel.Dock="Right" Content="LOG OUT" Margin="20,0,20,0" Style="{StaticResource ButtonPrimaryS}" Click="btnLogout_Click"></Button>
                                        <Label x:Name="LblCurrentUser" DockPanel.Dock="Right" VerticalAlignment="Center" FontSize="14" FontWeight="Regular" Foreground="White">
                                            <Label.Content>
                                                <Binding Path="CurrentUser" Source="{x:Static Application.Current}"/>
                                            </Label.Content>
                                        </Label>
                                    </DockPanel>
                                </Border>

                            </Grid>

                            <!-- Subheader row -->
                            <Grid Grid.Row="1">
                                <Border Grid.Row="0" Background="#fff" >
                                    <DockPanel VerticalAlignment="Center">
                                        <Grid DockPanel.Dock="Left">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                                <RowDefinition Height="Auto"></RowDefinition>
                                            </Grid.RowDefinitions>

                                            <DockPanel Grid.Row="0">
                                                <Image x:Name="imgEventLogo" Width="30" Source="/Images/icon_event_primary.png" DockPanel.Dock="Left" Margin="50,0,10,0"></Image>
                                                <Label x:Name="lblEventName" Foreground="#FF2489FF" FontSize="18" DockPanel.Dock="Left" Margin="0,5,0,0" >
                                                    <Label.Content>
                                                        <Binding Path="CurrentEvent" Source="{x:Static Application.Current}"/>
                                                    </Label.Content>
                                                </Label>
                                            </DockPanel>

                                            <Label x:Name="lblEventDateLocation" FontSize="14" FontWeight="Regular" Grid.Row="1" Margin="90,0,0,0">
                                                <Label.Content>
                                                    <Binding Path="CurrentEventLocation" Source="{x:Static Application.Current}"/>
                                                </Label.Content>
                                            </Label>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                            </Grid>

                            <!-- Content row -->
                            <Grid Grid.Row="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="100"/>
                                </Grid.RowDefinitions>
                                
                                <Grid Grid.Row="0" x:Name="gdrContent" Margin="50, 35, 50, 0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <StackPanel Margin="0,0,70,0">
                                        <TextBlock Style="{StaticResource TextBlockTitle}" Text="PRINT SETUP" Margin="0,0,0,25"></TextBlock>
                                        
                                        <DockPanel LastChildFill="False">
                                            <CheckBox x:Name="cbSelectPrinter" Style="{StaticResource SetupStep}" DockPanel.Dock="Left" Margin="0,0,25,0" >
                                                <CheckBox.IsChecked>
                                                    <Binding Path="IsPrinter" Source="{x:Static Application.Current}"/>
                                                </CheckBox.IsChecked>
                                                <Image x:Name="imgSelectPrinter"  Source="/Images/icon_printer.png" Margin="15"></Image>
                                            </CheckBox>
                                            <TextBlock Text="" Foreground="#434752" FontSize="16" FontWeight="SemiBold" Margin="0,10,0,0">
                                                STEP 1
                                                <LineBreak />
                                                Select printing device
                                            </TextBlock>
                                        </DockPanel>
                                            <Line x:Name="linePrintAccount" StrokeThickness="8" Stroke="#D3D4D6" X1="35" Y1="0" X2="35" Y2="60"></Line>
                                        <DockPanel LastChildFill="False">
                                            <CheckBox x:Name="cbSelectAccounts"  Style="{StaticResource SetupStep}" HorizontalAlignment="Left" Margin="0,0,25,0">
                                                <CheckBox.IsChecked>
                                                    <Binding Path="IsAccount" Source="{x:Static Application.Current}"/>
                                                </CheckBox.IsChecked>
                                                <Image x:Name="imgSelectAccounts"  Source="/Images/icon_users.png" Margin="15"></Image>
                                            </CheckBox>
                                            <TextBlock Text="" Foreground="#434752" FontSize="16" FontWeight="SemiBold" Margin="0,10,0,0">
                                                STEP 2
                                                <LineBreak />
                                                Select accounts
                                            </TextBlock>
                                        </DockPanel>
                                        <Line  x:Name="lineAccountTemplate"  StrokeThickness="8" Stroke="#D3D4D6" X1="35" Y1="0" X2="35" Y2="60"></Line>
                                        <DockPanel LastChildFill="False">
                                            <CheckBox  x:Name="cbSelectTemplate" Style="{StaticResource SetupStep}" HorizontalAlignment="Left" Margin="0,0,25,0">
                                                <CheckBox.IsChecked>
                                                    <Binding Path="IsTemplate" Source="{x:Static Application.Current}"/>
                                                </CheckBox.IsChecked>
                                                <Image x:Name="imgSelectTemplate"  Source="/Images/qr.jpg" Margin="15"></Image>
                                            </CheckBox>
                                            <TextBlock Text="" Foreground="#434752" FontSize="16" FontWeight="SemiBold" Margin="0,10,0,0">
                                                STEP 3
                                                <LineBreak />
                                                Set label template
                                            </TextBlock>
                                        </DockPanel>
                                    </StackPanel>

                                    <!-- Rectangle hack to put shadow on panel (in a way that it won't affect text rendering) -->
                                    <Rectangle Stretch="Fill" Fill="#fff" RadiusX="4" RadiusY="4" Grid.Column="1">
                                        <Rectangle.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="315" Color="#ccc"/>
                                        </Rectangle.Effect>
                                    </Rectangle>

                                    <Border Grid.Column="1" Background="#fff" CornerRadius="4">
                                        <ContentPresenter Grid.Column="1" />
                                    </Border>
                                </Grid>

                                <Grid Grid.Row="1" Margin="0,0,50,0">
                                    <DockPanel LastChildFill="False">
                                        <Button x:Name="btnNext" Width="100" Margin="10,0,0,0" Content="NEXT" Style="{StaticResource ButtonPrimary}" DockPanel.Dock="Right" Click="btnNext_Click"></Button>
                                        <Button x:Name="btnCancel" Width="100" Content="CANCEL" Style="{StaticResource ButtonPrimary}" Background="#CECFD1" DockPanel.Dock="Right" Click="btnCancel_Click"></Button>
                                    </DockPanel>
                                </Grid>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LogBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="#CBCBCB" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="Margin" Value="0,0,0,15" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#F8F8F8" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="ChecBoxPrinterStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="300" Padding="15,12" Margin="0,0,25,25">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageCheckBox" Source="/Images/icon_printer_primary.png" Width="30" Height="30" Margin="0,0,10,0" />
                                <ContentPresenter VerticalAlignment="Center"/>
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="Background" Value="#EEF5FE" />
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="ChecBoxAccountStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="300" Padding="15,12" Margin="0,0,25,25">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="imageCheckBox" Source="/Images/icon_user_primary.png" Width="25" Height="25" Margin="0,0,10,0"/>
                                <ContentPresenter VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="Background" Value="#EEF5FE" />
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
        
        <Style x:Key="CheckBoxTemplateSizeStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Padding="10,5" Margin="0,0,15,15">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#1581FB"></Setter>
            <Setter Property="FontWeight" Value="Semibold"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleHL" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" BorderThickness="2" CornerRadius="4" Width="115" Height="55" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Source="/Images/qr.jpg" HorizontalAlignment="Left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleHR" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15"  BorderThickness="2" CornerRadius="4" Width="115" Height="55">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="1" Source="/Images/qr.jpg" HorizontalAlignment="Right"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="CheckBoxTemplateLayoutStyleQRT" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Right" Source="/Images/qr.jpg"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
     
        <Style x:Key="CheckBoxTemplateLayoutStyleQRB" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="1" Grid.Column="1" VerticalAlignment="Bottom" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="Right"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
     
        <Style x:Key="CheckBoxTemplateLayoutStyleQLT" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="0" Grid.Column="0" VerticalAlignment="Top" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="Left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>
    
        <Style x:Key="CheckBoxTemplateLayoutStyleQLB" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border x:Name="bdrOutside" Background="Transparent" BorderBrush="#CBCBCB" Margin="0,0,15,15" CornerRadius="4" BorderThickness="2" Width="115" Height="55">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"></RowDefinition>
                                    <RowDefinition Height="1*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                    <ColumnDefinition Width="1*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom" Source="/Images/qr.jpg" Width="30" Height="30" HorizontalAlignment="left"></Image>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="bdrOutside" Property="BorderBrush" Value="#FF1FE6A5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
        </Style>

        <Style x:Key="ChecBoxDataStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <DockPanel>
                            <Border x:Name="bdrOutside" DockPanel.Dock="Left" Background="Transparent" BorderBrush="#CBCBCB" BorderThickness="2" CornerRadius="4" Width="18" Height="18" Margin="0,0,10,0">
                                <Image x:Name="imgCheck" Source="Images/check_mark.png" Width="0"></Image>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center" DockPanel.Dock="Left" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="imgCheck" Property="Width" Value="12" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="FontWeight" Value="SemiBold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Margin" Value="0,0,0,5"></Setter>
        </Style>
        
    </Application.Resources>
</Application>

